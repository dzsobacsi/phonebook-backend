{"version":3,"sources":["Person.js","Persons.js","Filter.js","PersonForm.js","Notification.js","services/phonebook.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","Persons","persons","searchTerm","filter","p","toLowerCase","indexOf","map","key","id","Filter","handleSearchChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","success","style","background","borderStyle","borderRadius","padding","margin","fontSize","fontStyle","color","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setMessage","setSuccess","alphabeticSortOfNames","a","b","useEffect","pbService","console","log","sort","event","target","preventDefault","isNew","undefined","find","alert","concat","setTimeout","catch","error","window","confirm","personToDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff9ef917.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, handleDelete }) => (\n  <>{person.name} &emsp; {person.number} &emsp;\n    <button onClick={() => handleDelete(person)}>delete</button><br/>\n  </>\n)\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, searchTerm, handleDelete }) => (\n  <>{\n    persons\n      .filter(p => p.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1)\n      .map(p => <Person key={p.id} person={p} handleDelete={handleDelete} />)\n  }</>\n)\n\nexport default Persons\n","import React from 'react'\n\nconst Filter = ({ searchTerm, handleSearchChange }) => (\n  <>\n    search: <input\n      value={searchTerm}\n      onChange={handleSearchChange}\n    />\n  </>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => (\n  <>\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input\n          value={newName}\n          onChange={handleNameChange}\n        /><br/>\n        number: <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n  const style = {\n    background: 'lightgray',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 5,\n    margin: 15,\n    fontSize: 20,\n    fontStyle: 'italic',\n  }\n  style.color = success ? 'green' : 'red'\n\n  if (message === null) return null\n\n  return (\n    <div style={style}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  //console.log('getAll called')\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst add = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then(response => response.data)\n}\n\nconst remove = (person) => {\n  return axios.delete(`${baseUrl}/${person.id}`)\n}\n\nconst update = (person) => {\n  //console.log('pbService: ', person)\n  return axios\n    .put(`${baseUrl}/${person.id}`, person)\n    .then(response => response.data)\n}\n\nexport default { getAll, add, remove, update }\n","import React, { useState, useEffect } from 'react'\nimport Persons from './Persons'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Notification from './Notification'\nimport pbService from './services/phonebook'\n\nconst App = () => {\n  const [ persons,    setPersons ]   = useState([])\n  const [ newName,    setNewName ]   = useState('add a new name...')\n  const [ newNumber,  setNewNumber ] = useState('')\n  const [ searchTerm, setSearchTerm] = useState('')\n  const [ message,    setMessage ]   = useState(null)\n  const [ success,    setSuccess ]   = useState(false)\n\n  const alphabeticSortOfNames = (a, b) => a.name < b.name ? -1 : 1\n\n  useEffect(() => {\n    //console.log('effect')\n    pbService.getAll().then(response => {\n      console.log('getAll fulfilled', response)\n      setPersons(response.sort(alphabeticSortOfNames))\n    })\n  }, [])\n  //console.log(`render ${persons.length} notes`)\n\n  const addPerson = (event) => {\n    // I do nothing with that event, I use the app state to add or modify the\n    // phonebook items\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n\n    const isNew = persons.find(p => p.name === newName) === undefined\n\n    if (newName === '') {\n      alert('Please enter a name')\n\n    // ===================== A new item to add ==========================\n    } else if(isNew) {\n        pbService.add(person)\n          .then(response => {\n            console.log('new item added ', response)\n            setPersons(persons.concat(response).sort(alphabeticSortOfNames))\n            setNewName('')\n            setNewNumber('')\n            setSuccess(true)\n            setMessage(`Added ${response.name} `)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2500)\n          })\n          .catch((error) => {\n            console.log(error.response.data)\n            setSuccess(false)\n            setMessage(error.response.data.error)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n\n    // ================== An existing item to update =====================\n    } else {\n      const confirmed = window.confirm(`${person.name} is already in the phonebook. Replace the old number with a new one?`)\n      if (confirmed) {\n        console.log(`${person.name} will be updated...`)\n        person.id = persons.find(p => p.name === person.name).id\n        pbService.update(person)\n          .then((response) => {\n            console.log('... to:', response)\n            setPersons(persons.map(p => p.id !== person.id ? p : response))\n            setNewName('')\n            setNewNumber('')\n            setSuccess(true)\n            setMessage(`Updated ${response.name} `)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2500)\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            setSuccess(false)\n            setMessage(error.response.data.error)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    }\n  }\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const handleDelete = (personToDelete) => {\n    const confirmed = window.confirm(`Are you sure to delete ${personToDelete.name} from the phonebook?`)\n    if (confirmed) {\n      console.log(`${personToDelete.name} will be deleted now!!!`)\n      pbService.remove(personToDelete)\n        .then(() => {\n          setPersons(persons.filter(p => p !== personToDelete))\n          setNewName('')\n          setNewNumber('')\n          setSuccess(true)\n          setMessage(`Deleted ${personToDelete.name} `)\n          setTimeout(() => {\n            setMessage(null)\n          }, 2500)\n        })\n        .catch(() => {\n          setSuccess(false)\n          setMessage(`${personToDelete.name} is alredy deleted from the server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3500)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} success={success}/>\n      <Filter searchTerm={searchTerm} handleSearchChange={handleSearchChange} />\n\n      <h2>Add a new person</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        searchTerm={searchTerm}\n        handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}